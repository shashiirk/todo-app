{"version":3,"sources":["components/Task/Task.module.css","components/UserInput/UserInput.module.css","components/Checkbox/Checkbox.module.css","components/Header/Header.module.css","components/TasksList/TasksList.module.css","components/Footer/Footer.module.css","components/Header/Header.js","components/UserInput/UserInput.js","components/Checkbox/Checkbox.js","components/Task/Task.js","components/TasksList/TasksList.js","components/Footer/Footer.js","App.js","index.js"],"names":["module","exports","Header","className","styles","title","UserInput","props","useState","userInput","setUserInput","form","onSubmit","ev","preventDefault","trim","length","onAddTask","id","nanoid","status","inputBox","type","placeholder","onChange","target","value","Checkbox","onClick","cbButton1","cbButton2","Task","task","setStatus","checked","prevState","onUpdate","delete","onDelete","TasksList","taskslist","items","map","index","onDeleteTask","onUpdateTask","Footer","footer","href","rel","App","tasksList","setTasksList","useEffect","localItems","JSON","parse","localStorage","getItem","removeItem","setItem","stringify","newTask","prevTasks","taskId","filter","taskIndex","findIndex","existingTask","updatedTask","updatedTasksList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c339830.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task_task__1DdZY\",\"checked\":\"Task_checked__1qRwc\",\"delete\":\"Task_delete__XZv6Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"UserInput_form__3G7o-\",\"inputBox\":\"UserInput_inputBox__bk6t1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cbButton1\":\"Checkbox_cbButton1__Mk9Om\",\"cbButton2\":\"Checkbox_cbButton2__cjZWj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Header_title__n7UhO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskslist\":\"TasksList_taskslist__9a8Ed\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__E-BoB\"};","import styles from './Header.module.css';\r\n\r\nconst Header = () => {\r\n  return <h1 className={styles.title}>What's the plan for today?</h1>;\r\n};\r\n\r\nexport default Header;\r\n","import { useState } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport styles from './UserInput.module.css';\r\n\r\nconst UserInput = (props) => {\r\n  const [userInput, setUserInput] = useState('');\r\n\r\n  const submitTaskHandler = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    if (userInput.trim().length === 0) {\r\n      return;\r\n    } else {\r\n      props.onAddTask({\r\n        id: nanoid(10),\r\n        title: userInput.trim(),\r\n        status: false,\r\n      });\r\n      setUserInput('');\r\n    }\r\n  };\r\n\r\n  const userInputHandler = (ev) => {\r\n    setUserInput(ev.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={submitTaskHandler}>\r\n      <div className={styles.inputBox}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a task\"\r\n          onChange={userInputHandler}\r\n          value={userInput}\r\n        />\r\n        <button type=\"submit\">+</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UserInput;\r\n","import styles from './Checkbox.module.css';\r\n\r\nconst Checkbox = (props) => {\r\n  return (\r\n    <>\r\n      {!props.status && (\r\n        <button onClick={props.onClick} className={styles.cbButton1}></button>\r\n      )}\r\n      {props.status && (\r\n        <button onClick={props.onClick} className={styles.cbButton2}>\r\n          <i className=\"fas fa-check\"></i>\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","import { useState } from 'react';\r\nimport Checkbox from '../Checkbox/Checkbox';\r\nimport styles from './Task.module.css';\r\n\r\nconst Task = (props) => {\r\n  const [status, setStatus] = useState(props.task.status);\r\n\r\n  const updateStatusHandler = () => {\r\n    setStatus((prevState) => !prevState);\r\n    props.onUpdate(props.id);\r\n  };\r\n\r\n  return (\r\n    <li className={`${styles.task} ${status ? styles.checked : ''}`}>\r\n      <Checkbox status={status} onClick={updateStatusHandler} />\r\n      <p>{props.task.title}</p>\r\n      <button\r\n        className={styles.delete}\r\n        onClick={() => props.onDelete(props.id)}\r\n      >\r\n        <i className=\"fas fa-times\"></i>\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from '../Task/Task';\r\nimport styles from './TasksList.module.css';\r\n\r\nconst TasksList = (props) => {\r\n  return (\r\n    <ul className={styles.taskslist}>\r\n      {props.items.map((task, index) => (\r\n        <Task\r\n          key={task.id}\r\n          id={task.id}\r\n          task={task}\r\n          onDelete={props.onDeleteTask}\r\n          onUpdate={props.onUpdateTask}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TasksList;\r\n","import styles from './Footer.module.css';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className={styles.footer}>\r\n      <p>\r\n        Built by{' '}\r\n        <a\r\n          href=\"https://shashiirk.github.io/portfolio\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          Shashikanth\r\n        </a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { useEffect, useState } from 'react';\r\nimport Header from './components/Header/Header';\r\nimport UserInput from './components/UserInput/UserInput';\r\nimport TasksList from './components/TasksList/TasksList';\r\nimport Footer from './components/Footer/Footer';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [tasksList, setTasksList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const localItems = JSON.parse(localStorage.getItem('tasks'));\r\n    if (localItems) {\r\n      setTasksList(localItems);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (tasksList.length === 0) {\r\n      localStorage.removeItem('tasks');\r\n    } else {\r\n      localStorage.setItem('tasks', JSON.stringify(tasksList));\r\n    }\r\n  }, [tasksList]);\r\n\r\n  const addTaskHandler = (newTask) => {\r\n    setTasksList((prevTasks) => {\r\n      const updatedTasksList = [...prevTasks, newTask];\r\n      return updatedTasksList;\r\n    });\r\n  };\r\n\r\n  const deleteTaskHandler = (taskId) => {\r\n    setTasksList((prevTasks) => {\r\n      const updatedTasksList = prevTasks.filter((task) => task.id !== taskId);\r\n      return updatedTasksList;\r\n    });\r\n  };\r\n\r\n  const updateTaskHandler = (taskId) => {\r\n    setTasksList((prevTasks) => {\r\n      const taskIndex = prevTasks.findIndex((task) => task.id === taskId);\r\n      const existingTask = prevTasks[taskIndex];\r\n      const updatedTask = {\r\n        ...existingTask,\r\n        status: !existingTask.status,\r\n      };\r\n      const updatedTasksList = [...prevTasks];\r\n      updatedTasksList[taskIndex] = updatedTask;\r\n      return updatedTasksList;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"outer-container\">\r\n        <Header />\r\n        <div className=\"inner-container\">\r\n          <UserInput onAddTask={addTaskHandler} />\r\n          <TasksList\r\n            items={tasksList}\r\n            onDeleteTask={deleteTaskHandler}\r\n            onUpdateTask={updateTaskHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}