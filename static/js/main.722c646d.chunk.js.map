{"version":3,"sources":["components/Task/Task.module.css","components/UserInput/UserInput.module.css","components/Checkbox/Checkbox.module.css","components/TasksList/TasksList.module.css","components/UserInput/UserInput.js","components/Checkbox/Checkbox.js","components/Task/Task.js","components/TasksList/TasksList.js","App.js","index.js"],"names":["module","exports","UserInput","props","useState","userInput","setUserInput","className","styles","form","onSubmit","ev","preventDefault","trim","length","onAddTask","id","nanoid","title","status","inputBox","type","placeholder","onChange","target","value","Checkbox","onClick","cbButton","checked","Task","task","setStatus","prevState","onUpdate","delete","onDelete","TasksList","taskslist","items","map","index","onDeleteTask","onUpdateTask","App","JSON","parse","localStorage","getItem","tasksList","setTasksList","updateLocalStorage","newTasksList","removeItem","setItem","stringify","newTask","prevTasks","updatedTasksList","taskId","filter","taskIndex","findIndex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,sBAAsB,OAAS,uB,iBCArFD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,SAAW,8B,gBCA5DD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,QAAU,4B,iBCAlED,EAAOC,QAAU,CAAC,UAAY,+B,yKCwCfC,EArCG,SAACC,GACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAqBA,OACE,sBAAMC,UAAWC,IAAOC,KAAMC,SApBN,SAACC,GACzBA,EAAGC,iBAE6B,IAA5BP,EAAUQ,OAAOC,SAGnBX,EAAMY,UAAU,CACdC,GAAIC,YAAO,IACXC,MAAOb,EAAUQ,OACjBM,QAAQ,IAEVb,EAAa,MASf,SACE,sBAAKC,UAAWC,IAAOY,SAAvB,UACE,uBACEC,KAAK,OACLC,YAAY,aACZC,SAViB,SAACZ,GACxBL,EAAaK,EAAGa,OAAOC,QAUjBA,MAAOpB,IAET,wBAAQgB,KAAK,SAAb,qB,gBCxBOK,EATE,SAACvB,GAChB,OACE,wBACEwB,QAASxB,EAAMwB,QACfpB,UAAS,UAAKC,IAAOoB,SAAZ,YAAwBzB,EAAMgB,OAASX,IAAOqB,QAAU,O,gBCoBxDC,EAtBF,SAAC3B,GACZ,MAA4BC,mBAASD,EAAM4B,KAAKZ,QAAhD,mBAAOA,EAAP,KAAea,EAAf,KAOA,OACE,qBAAIzB,UAAS,UAAKC,IAAOuB,KAAZ,YAAoBZ,EAASX,IAAOqB,QAAU,IAA3D,UACE,cAAC,EAAD,CAAUV,OAAQA,EAAQQ,QAPF,WAC1BK,GAAU,SAACC,GAAD,OAAgBA,KAC1B9B,EAAM+B,SAAS/B,EAAMa,OAMnB,4BAAIb,EAAM4B,KAAKb,QACf,wBACEX,UAAWC,IAAO2B,OAClBR,QAAS,kBAAMxB,EAAMiC,SAASjC,EAAMa,KAFtC,wB,iBCGSqB,EAhBG,SAAClC,GACjB,OACE,oBAAII,UAAWC,IAAO8B,UAAtB,SACGnC,EAAMoC,MAAMC,KAAI,SAACT,EAAMU,GAAP,OACf,cAAC,EAAD,CAEEzB,GAAIe,EAAKf,GACTe,KAAMA,EACNK,SAAUjC,EAAMuC,aAChBR,SAAU/B,EAAMwC,cAJXZ,EAAKf,UC+CL4B,G,MAlDH,WACV,MAAkCxC,mBAChCyC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,IAD/C,mBAAOC,EAAP,KAAkBC,EAAlB,KA6BMC,EAAqB,SAACC,GACE,IAAxBA,EAAatC,OACfiC,aAAaM,WAAW,SAExBN,aAAaO,QAAQ,QAAST,KAAKU,UAAUH,KAIjD,OACE,sBAAK7C,UAAU,YAAf,UACE,cAAC,EAAD,CAAWQ,UAnCQ,SAACyC,GACtBN,GAAa,SAACO,GACZ,IAAMC,EAAgB,sBAAOD,GAAP,CAAkBD,IAExC,OADAL,EAAmBO,GACZA,QAgCP,cAAC,EAAD,CACEnB,MAAOU,EACPP,aA9BoB,SAACiB,GACzBT,GAAa,SAACO,GACZ,IAAMC,EAAmBD,EAAUG,QAAO,SAAC7B,GAAD,OAAUA,EAAKf,KAAO2C,KAEhE,OADAR,EAAmBO,GACZA,MA2BLf,aAvBoB,SAACgB,GACzBT,GAAa,SAACO,GACZ,IAAMI,EAAYJ,EAAUK,WAAU,SAAC/B,GAAD,OAAUA,EAAKf,KAAO2C,KAG5D,OAFAF,EAAUI,GAAW1C,QAAUsC,EAAUI,GAAW1C,OACpDgC,EAAmBM,GACZA,aC1BbM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.722c646d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task_task__2xTSa\",\"checked\":\"Task_checked__1IsPB\",\"delete\":\"Task_delete__1YVPw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"UserInput_form__1LfaD\",\"inputBox\":\"UserInput_inputBox__2MVg6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cbButton\":\"Checkbox_cbButton__3DzjS\",\"checked\":\"Checkbox_checked__S3IFp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskslist\":\"TasksList_taskslist__2z9Ix\"};","import { useState } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport styles from './UserInput.module.css';\r\n\r\nconst UserInput = (props) => {\r\n  const [userInput, setUserInput] = useState('');\r\n\r\n  const submitTaskHandler = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    if (userInput.trim().length === 0) {\r\n      return;\r\n    } else {\r\n      props.onAddTask({\r\n        id: nanoid(10),\r\n        title: userInput.trim(),\r\n        status: false,\r\n      });\r\n      setUserInput('');\r\n    }\r\n  };\r\n\r\n  const userInputHandler = (ev) => {\r\n    setUserInput(ev.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={submitTaskHandler}>\r\n      <div className={styles.inputBox}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a task\"\r\n          onChange={userInputHandler}\r\n          value={userInput}\r\n        />\r\n        <button type=\"submit\">+</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UserInput;\r\n","import styles from './Checkbox.module.css';\r\n\r\nconst Checkbox = (props) => {\r\n  return (\r\n    <button\r\n      onClick={props.onClick}\r\n      className={`${styles.cbButton} ${props.status ? styles.checked : ''}`}\r\n    ></button>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","import { useState } from 'react';\r\nimport Checkbox from '../Checkbox/Checkbox';\r\nimport styles from './Task.module.css';\r\n\r\nconst Task = (props) => {\r\n  const [status, setStatus] = useState(props.task.status);\r\n\r\n  const updateStatusHandler = () => {\r\n    setStatus((prevState) => !prevState);\r\n    props.onUpdate(props.id);\r\n  };\r\n\r\n  return (\r\n    <li className={`${styles.task} ${status ? styles.checked : ''}`}>\r\n      <Checkbox status={status} onClick={updateStatusHandler} />\r\n      <p>{props.task.title}</p>\r\n      <button\r\n        className={styles.delete}\r\n        onClick={() => props.onDelete(props.id)}\r\n      >\r\n        &#10006;\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from '../Task/Task';\r\nimport styles from './TasksList.module.css';\r\n\r\nconst TasksList = (props) => {\r\n  return (\r\n    <ul className={styles.taskslist}>\r\n      {props.items.map((task, index) => (\r\n        <Task\r\n          key={task.id}\r\n          id={task.id}\r\n          task={task}\r\n          onDelete={props.onDeleteTask}\r\n          onUpdate={props.onUpdateTask}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TasksList;\r\n","import { useState } from 'react';\nimport UserInput from './components/UserInput/UserInput';\nimport TasksList from './components/TasksList/TasksList';\nimport './App.css';\n\nconst App = () => {\n  const [tasksList, setTasksList] = useState(\n    JSON.parse(localStorage.getItem('tasks')) || []\n  );\n\n  const addTaskHandler = (newTask) => {\n    setTasksList((prevTasks) => {\n      const updatedTasksList = [...prevTasks, newTask];\n      updateLocalStorage(updatedTasksList);\n      return updatedTasksList;\n    });\n  };\n\n  const deleteTaskHandler = (taskId) => {\n    setTasksList((prevTasks) => {\n      const updatedTasksList = prevTasks.filter((task) => task.id !== taskId);\n      updateLocalStorage(updatedTasksList);\n      return updatedTasksList;\n    });\n  };\n\n  const updateTaskHandler = (taskId) => {\n    setTasksList((prevTasks) => {\n      const taskIndex = prevTasks.findIndex((task) => task.id === taskId);\n      prevTasks[taskIndex].status = !prevTasks[taskIndex].status;\n      updateLocalStorage(prevTasks);\n      return prevTasks;\n    });\n  };\n\n  const updateLocalStorage = (newTasksList) => {\n    if (newTasksList.length === 0) {\n      localStorage.removeItem('tasks');\n    } else {\n      localStorage.setItem('tasks', JSON.stringify(newTasksList));\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <UserInput onAddTask={addTaskHandler} />\n      <TasksList\n        items={tasksList}\n        onDeleteTask={deleteTaskHandler}\n        onUpdateTask={updateTaskHandler}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}